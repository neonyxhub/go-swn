syntax = "proto3";
package bus_api;
option go_package = "go.neonyx.io/go-swn/pkg/bus/pb";

import "google/protobuf/empty.proto";

service SWNBus {
	// placeholder for bidirectional streaming events and receiving events
	rpc EventBidirect(stream Event) returns (stream Event) {};
	// swn here is the server, which listens to events from cwn
	rpc LocalDistributeEvents(stream Event) returns (StreamEventsResponse) {};
	// swn here is the server, which gives events to cwn
	rpc LocalFunnelEvents(ListenEventsRequest) returns (stream Event) {};
	// returns local swn's peer information
	rpc GetPeerInfo(google.protobuf.Empty) returns (Peer) {};
}

enum EventType {
	REQ = 0;
	RESP = 1;
	ERR = 2;
}

message Destination {
	bytes Addr = 1;
}

message LexiconUri {
	string Uri = 1;
}

message Event {
	uint64 Id = 1;
	EventType Type = 2;
	Destination Dest = 3;
	LexiconUri Lexicon = 4;
	bytes Data = 5;
	bytes Auth = 6;
	uint64 CreatedTimestamp = 7;
}

message Peer {
	bytes Id = 1;
}

// could be implemented in future

message ListenEventsRequest {}
message StreamEventsResponse {}